# Generated by Django 4.0.4 on 2022-04-25 12:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('username', models.CharField(blank=True, default='', max_length=40, null=True)),
                ('is_student', models.BooleanField(default=False)),
                ('has_school', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Classs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard', models.IntegerField(blank=True)),
                ('division', models.CharField(max_length=10)),
                ('access_code', models.CharField(blank=True, max_length=10, unique=True)),
                ('teacher_name', models.ManyToManyField(related_name='teacher_class', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Classes',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('teacher_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('age', models.IntegerField(blank=True)),
                ('access_token', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('schoolApp.teacher',),
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(blank=True, max_length=40)),
                ('address', models.CharField(max_length=100)),
                ('school_phone', models.CharField(blank=True, max_length=15)),
                ('admin_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_info', to=settings.AUTH_USER_MODEL, unique=True)),
                ('class_field', models.ManyToManyField(to='schoolApp.classs')),
                ('teacher_id', models.ManyToManyField(related_name='teacher_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='classs',
            name='student_name',
            field=models.ManyToManyField(related_name='student_class', to='schoolApp.student'),
        ),
    ]
